# Copyright 2021 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create terraform template .tf files
  when: plat__terraform_template_dir is defined # TODO: Is this needed?
  block:
    - name: Create terraform template dir
      ansible.builtin.file:
        path: "{{ plat__terraform_template_dir }}/plat"
        state: directory

    # Apply template for Terraform provider
    - name: Generate Terraform Provider
      ansible.builtin.template:
        src: 'template/{{ plat__infra_type }}/provider.tf.j2'
        dest: "{{ plat__terraform_template_dir }}/plat/provider.tf"

    # Apply template for Terraform backend state
    - name: Generate Terraform Backend State
      ansible.builtin.template:
        src: 'template/{{ plat__infra_type }}/backend_state.tf.j2'
        dest: "{{ plat__terraform_template_dir }}/plat/backend_state.tf"

    # Apply template for Terraform variables
    - name: Generate Terraform Variables
      ansible.builtin.template:
        src: 'template/{{ plat__infra_type }}/terraform_variables.tf.j2'
        dest: "{{ plat__terraform_template_dir }}/plat/variables.tf"
      no_log: false

- name: Create a temporary directory for policy documents
  ansible.builtin.tempfile:
    prefix: "aws-policy-"
    state: directory
  register: __aws_policy_tmpdir

- name: Download AWS default policy documents
  ansible.builtin.get_url:
    dest: "{{ __aws_policy_tmpdir.path }}"
    url: "{{ __policy_url_item.value }}"
  loop_control:
    loop_var: __policy_url_item
    label: "{{ __policy_url_item.key }}"
  loop: "{{ plat__aws_policy_urls | dict2items }}"
  register: __aws_policy_documents

- name: Process AWS default policy documents
  ansible.builtin.include_tasks: aws_policy_regex.yml
  loop: "{{ __aws_policy_documents.results }}"
  loop_control:
    loop_var: __aws_policy_document_item
    label: "{{ __aws_policy_document_item.__policy_url_item.key }}"

- name: Copy AWS policy documents to Terraform workspace_dir_path
  ansible.builtin.copy:  
    src: "{{ __aws_policy_tmpdir.path }}/"
    dest: "{{ plat__terraform_template_dir }}/plat/policy_docs/"

- name: Remove temporary directory for policy documents
  ansible.builtin.file:
    path: "{{ __aws_policy_tmpdir.path }}"
    state: absent

# NOTE: These don't work because not all variables are defined during teardown
# ......ALSO they are not needed because we are working off the state file
# # Apply template for Terraform auth resources....
# # ...policies
# - name: Generate Terraform authz file for policies 
#   template:
#     src: 'template/{{ plat__infra_type }}/plat_{{ plat__infra_type }}_authz_policies.tf.j2'
#     dest: "{{ plat__terraform_template_dir }}/plat/plat_authz_policies.tf"
#   no_log: false

# # ...roles
# - name: Generate Terraform authz file for roles 
#   template:
#     src: 'template/{{ plat__infra_type }}/plat_{{ plat__infra_type }}_authz_roles.tf.j2'
#     dest: "{{ plat__terraform_template_dir }}/plat/plat_authz_roles.tf"
#   no_log: false

- name: Prompt added by jenright 
  ansible.builtin.pause:
    prompt: "Terraform role & policy files for Teardown created in {{ plat__terraform_template_dir }}/plat"
  when: debug_terraform | default(false) | bool
