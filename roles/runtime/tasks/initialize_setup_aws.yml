---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Runlevel first, upstream second, and discover third
- name: Discover AWS VPC if not defined
  when: run__aws_vpc_id == "" and plat__aws_vpc_id is undefined and infra__aws_vpc_id is undefined
  block:
    - name: Query AWS VPC by name
      amazon.aws.ec2_vpc_net_info:
        region: "{{ run__region }}"
        filters:
          "tag:Name": "{{ run__vpc_name }}"
      register: __aws_vpc_info

    - name: Assert discovered AWS VPC
      ansible.builtin.assert:
        that: __aws_vpc_info.vpcs | length == 1
        fail_msg: "No AWS VPC discovered"
        quiet: yes

    - name: Set fact for AWS VPC ID
      when: __aws_vpc_info is defined
      ansible.builtin.set_fact:
        run__aws_vpc_id: "{{ __aws_vpc_info.vpcs[0].id }}"

- name: Set fact for AWS VPC ID if established by Infrastructure
  when: run__aws_vpc_id == "" and infra__aws_vpc_id is defined
  ansible.builtin.set_fact:
    run__aws_vpc_id: "{{ infra__aws_vpc_id }}"

- name: Set fact for AWS VPC ID if established by Platform
  when: run__aws_vpc_id == "" and plat__aws_vpc_id is defined
  ansible.builtin.set_fact:
    run__aws_vpc_id: "{{ plat__aws_vpc_id }}"

# Runlevel first, upstream second, and discover third
- name: Handle AWS Public and Private VPC Subnets if not defined
  when: not run__aws_public_subnet_ids or not run__aws_private_subnet_ids # Defaults are empty lists
  block:
    - name: Query AWS Subnets
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ run__region }}"
        filters:
          vpc-id: "{{ run__aws_vpc_id }}"
      register: __aws_subnets_info

    - name: Assert discovered AWS Subnets
      ansible.builtin.assert:
        that: __aws_subnets_info.subnets | length > 0
        fail_msg: "No subnets discovered for AWS VPC"
        quiet: yes

    - name: Set fact for AWS Public Subnet IDs if established by Infrastructure
      when: not run__aws_public_subnet_ids and infra__aws_public_subnet_ids is defined
      ansible.builtin.set_fact:
        run__aws_public_subnet_ids: "{{ infra__aws_public_subnet_ids }}"

    - name: Set fact for AWS Public Subnet IDs if established by Platform
      when: not run__aws_public_subnet_ids and plat__aws_public_subnet_ids is defined
      ansible.builtin.set_fact:
        run__aws_public_subnet_ids: "{{ plat__aws_public_subnet_ids }}"

    - name: Discover AWS VPC Public Subnets
      when: not run__aws_public_subnet_ids
      block:
        - name: Collect AWS Public Subnets
          ansible.builtin.set_fact:
            __aws_public_subnet_ids: "{{ __aws_public_subnet_ids | default([]) | union([__aws_subnet_item.subnet_id | default('')]) }}"
          loop_control:
            loop_var: __aws_subnet_item
            label: "{{ __aws_subnet_item.subnet_id }}"
          loop: "{{ __aws_subnets_info.subnets | selectattr('map_public_ip_on_launch') }}"
        
        - name: Set fact for AWS Public Subnet IDs
          ansible.builtin.set_fact:
            run__aws_public_subnet_ids: "{{ __aws_public_subnet_ids | default([]) }}"

    - name: Set fact for AWS Private Subnet IDs if established by Infrastructure
      when: not run__aws_private_subnet_ids and infra__aws_private_subnet_ids is defined
      ansible.builtin.set_fact:
        run__aws_private_subnet_ids: "{{ infra__aws_private_subnet_ids }}"

    - name: Set fact for AWS Private Subnet IDs if established by Platform
      when: not run__aws_private_subnet_ids and plat__aws_private_subnet_ids is defined
      ansible.builtin.set_fact:
        run__aws_private_subnet_ids: "{{ plat__aws_private_subnet_ids }}"

    - name: Discover AWS VPC Private Subnets
      when: not run__aws_private_subnet_ids
      block:
        - name: Collect AWS Private Subnets
          ansible.builtin.set_fact:
            __aws_private_subnet_ids: "{{ __aws_private_subnet_ids | default([]) | union([__aws_subnet_item.subnet_id | default('')]) }}"
          loop_control:
            loop_var: __aws_subnet_item
            label: "{{ __aws_subnet_item.subnet_id }}"
          loop: "{{ __aws_subnets_info.subnets | rejectattr('map_public_ip_on_launch') }}"
        
        - name: Set fact for AWS Private Subnet IDs
          ansible.builtin.set_fact:
            run__aws_private_subnet_ids: "{{ __aws_private_subnet_ids | default([]) }}"

- name: Set fact for AWS Subnet IDs and define generic subnet IDs
  ansible.builtin.set_fact:
    run__aws_subnet_ids: "{{ run__aws_public_subnet_ids | union(run__aws_private_subnet_ids) }}"
    run__public_subnet_ids: "{{ run__aws_public_subnet_ids }}"
    run__private_subnet_ids: "{{ run__aws_private_subnet_ids }}"
