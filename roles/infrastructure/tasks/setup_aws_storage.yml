---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Warn user about HeadBucket Forbidden errors
  debug:
    msg:
      - "If the 'Create AWS Buckets' task below fails. "
      - "If you see HeadBucket Forbidden errors. "
      - "Your bucket name is probably use in another AWS account and you should use a different name_prefix"

- name: Construct tags for AWS Buckets
  ansible.builtin.set_fact:
    __infra_aws_storage_tags_list: "{{ __infra_aws_storage_tags_list | default([]) | union([storage_tag_pair]) }}"
  vars:
    storage_tag_pair: '{Key={{ __storage_tag.key }},Value="{{ __storage_tag.value | quote }}"}'
  loop: "{{ __infra_aws_storage_tags | dict2items }}"
  loop_control:
    loop_var: __storage_tag

- name: Create AWS Buckets
  amazon.aws.s3_bucket:
    region: "{{ infra__region }}"
    name: "{{ __aws_storage_location_item.bucket }}"
    state: present
    object_ownership: "{{ infra__aws_bucket_object_ownership }}"
  loop_control:
    loop_var: __aws_storage_location_item
    label: "{{ __aws_storage_location_item.bucket }}"
  loop: "{{ infra__aws_storage_locations }}"
  register: __infra_aws_storage_locations_info

- name: Create AWS Buckets directory structures
  amazon.aws.aws_s3:
    region: "{{ infra__region }}"
    bucket: "{{ __aws_storage_object_item.bucket }}"
    object: "{{ __aws_storage_object_item.path }}"
    mode: create  # Put will not work here due to the way the s3 module is written
    permission: "{{ infra__aws_bucket_acl_permissions }}"
  loop_control:
    loop_var: __aws_storage_object_item
    label: "{{ __aws_storage_object_item.bucket }}/{{ __aws_storage_object_item.path }}"
  loop: "{{ infra__aws_storage_locations }}"

- name: Update AWS Buckets tags (overwrite)
  when: __infra_aws_storage_tags_list is defined
  ansible.builtin.command: >
    aws s3api put-bucket-tagging
    --bucket {{ __infra_aws_storage_location_item.bucket }} 
    --tagging TagSet=[{{ __infra_aws_storage_tags_list | join(',') }}]
  loop_control:
    loop_var: __infra_aws_storage_location_item
    label: "{{ __infra_aws_storage_location_item.bucket }}"
  loop: "{{ infra__aws_storage_locations }}"
  register: __infra_aws_storage_tags_info

- name: Ensure Download Mirror Bucket exists in target region
  when: infra__create_utility_service
  amazon.aws.s3_bucket:
    region: "{{ infra__region }}"
    name: "{{ infra__utlity_bucket_name }}"
    state: present
    object_ownership: "{{ infra__aws_bucket_object_ownership }}"

- name: Update Download Mirror Buckets tags (overwrite)
  when: infra__create_utility_service and __infra_aws_storage_tags_list is defined
  ansible.builtin.command: >
    aws s3api put-bucket-tagging
    --bucket {{ infra__utlity_bucket_name }} 
    --tagging TagSet=[{{ __infra_aws_storage_tags_list | join(',') }}]
  loop_control:
    loop_var: __infra_aws_storage_location_item
    label: "{{ __infra_aws_storage_location_item }}"
  loop: "{{ infra__aws_storage_locations }}"
  register: __infra_aws_storage_tags_info