---

# Copyright 2021 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Check if Terraform workspace directory exists
  ansible.builtin.stat: 
    path: "{{ infra__terraform_workspace_dir }}/workspace/infra"
  register: workdir

- name: Ensure the Terraform workspace directory exists
  ansible.builtin.copy:
    src: "{{ infra__terraform_template_dir }}/infra/"
    dest: "{{ infra__terraform_workspace_dir }}/workspace/infra"
  # when: not workdir.stat.exists # NOTE: When uncommented won't override workspace dir if any changes to .tf are made.

- name: Copy Terraform infra code to the artefact directory
  ansible.builtin.copy:
    src: "{{ infra__terraform_template_dir }}/infra/"
    dest: "{{ infra__terraform_artefact_dir }}/infra"

- name: Prompt to debug Terraform deployment 
  ansible.builtin.pause:
    prompt: "Ready to do Terraform apply on infra files in {{ infra__terraform_workspace_dir }}/workspace/infra"
  when: debug_terraform | default(false) | bool

- name: Applying Terraform
  community.general.terraform:
    project_path: "{{ infra__terraform_workspace_dir }}/workspace/infra"
    state: "present"
    force_init: yes
  register: tf_result
  retries: 3
  delay: 10
  until: tf_result is succeeded

- name: Prompt to debug Terraform deployment 
  pause:
    prompt: "Terraform apply on infra files complete. Check AWS Console."
  when: debug_terraform | default(false) | bool

- name: Remove the Terraform template directory
  ansible.builtin.file:
    path: "{{ infra__terraform_template_dir }}/infra"
    state: absent

- name: Remove the Terraform workspace directory when using remote state
  ansible.builtin.file:
    path: "{{ infra__terraform_workspace_dir }}/workspace/infra"
    state: absent
  when: infra__terraform_state_storage in ['remote_s3']

# If created Utility Instance via Terraform then
# need to get it's info and add to an Ansible host group
- name: Add Utility Instance to host group
  when: infra__create_utility_service
  block:
    - name: Discover the Utility Instance details
      community.aws.ec2_instance_info:
        region: "{{ infra__region }}"
        filters: "{{ __filters | items2dict }}"
      vars:
        __filters:
          - key: "tag:Name"
            value: "{{ infra__namespace }}*"
      register: __infra_utility_compute_discovered

    - name: Add discovered Utility Instance to host group
      ansible.builtin.add_host:
        hostname: "{{__infra_utility_compute_discovered.instances[0].public_ip_address}}"
        ansible_user: "{{ infra__dynamic_inventory_images_default[infra__type][infra__dynamic_inventory_os].user }}"
        ansible_ssh_private_key_file: "{{ (infra__private_key_file == '') | ternary(omit, infra__private_key_file) }}"
        groupname: cldr_utility