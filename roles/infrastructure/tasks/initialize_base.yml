---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Get public IP from Ipify
  community.general.ipify_facts:
    timeout: 20
  ignore_errors: yes

- name: Alternate Ipify
  when: ipify_public_ip is not defined
  block:
    - name: Fetch Public IP From Icanhazip
      ansible.builtin.uri:
        url: https://ipv4.icanhazip.com
        return_content: yes
      register: __public_ip_info

    - name: Set Alternate Ipify fact
      ansible.builtin.set_fact:
        ipify_public_ip: "{{ __public_ip_info.content | trim }}"

- name: Print tags
  ansible.builtin.debug:
    msg: "{{ infra__tags }}"
    verbosity: 1

# TODO: Consider option to make existing subnet details generic?
- name: Generate Public Subnet details for creation
  when: not infra__aws_public_subnet_ids
  ansible.builtin.set_fact:
    infra__vpc_public_subnets_info: "{{ infra__vpc_public_subnets_info | default([]) | union([entry]) }}"
  loop_control:
    loop_var: __public_subnet_item
    index_var: __public_subnet_idx
  loop: "{{ infra__vpc_public_subnet_cidrs }}"
  vars:
    entry:
      name: "{{ [infra__namespace, infra__vpc_public_subnets_suffix, __public_subnet_idx|string] | join('-') }}"
      cidr: "{{ __public_subnet_item }}"
      tags:
        "kubernetes.io/role/elb": "1"
        "Name": "{{ [infra__namespace, infra__vpc_public_subnets_suffix, __public_subnet_idx|string] | join('-') }}"

- name: Generate Private Subnet Details for creation
  when: not infra__aws_private_subnet_ids
  ansible.builtin.set_fact:
    infra__vpc_private_subnets_info: "{{ infra__vpc_private_subnets_info | default([]) | union([entry]) }}"
  loop_control:
    loop_var: __private_subnet_item
    index_var: __private_subnet_idx
  loop: "{{ infra__vpc_private_subnet_cidrs }}"
  vars:
    entry:
      name: "{{ [infra__namespace, infra__vpc_private_subnets_suffix, __private_subnet_idx|string] | join('-') }}"
      cidr: "{{ __private_subnet_item }}"
      tags:
        "kubernetes.io/role/internal-elb": "1"
        "Name": "{{ [infra__namespace, infra__vpc_private_subnets_suffix, __private_subnet_idx|string] | join('-') }}"