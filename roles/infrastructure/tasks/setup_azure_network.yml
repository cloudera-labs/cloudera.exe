---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create Azure VNet
  azure.azcollection.azure_rm_virtualnetwork:
    resource_group: "{{ infra__azure_metagroup_name }}"
    location: "{{ infra__region }}"
    name: "{{ infra__vpc_name }}"
    address_prefixes_cidr: "{{ [infra__vpc_cidr] }}"
    purge_address_prefixes: yes
    purge_dns_servers: yes
    tags: "{{ infra__tags }}"
    state: present
  register: __azure_vnet_info

- name: Set fact for Azure VNet URI
  ansible.builtin.set_fact:
    infra__azure_vnet_uri: "{{ __azure_vnet_info.state.id }}"

- name: Create Azure Network Security Groups
  azure.azcollection.azure_rm_securitygroup:
    resource_group: "{{ infra__azure_metagroup_name }}"
    location: "{{ infra__region }}"
    name: "{{ __azure_network_security_group_name_item }}"
    tags: "{{ infra__tags }}"
    purge_rules: yes
    rules: "{{ infra__azure_security_group_rules }}"
    state: present
  loop_control:
    loop_var: __azure_network_security_group_name_item
  loop:
    - "{{ infra__security_group_knox_name }}"
    - "{{ infra__security_group_default_name }}"
  register: __azure_security_group_info

- name: Set fact for Azure Security Group IDs
  ansible.builtin.set_fact:
    infra__azure_security_group_knox_uri: "{{ __azure_security_group_info | community.general.json_query(knox) | first }}"
    infra__azure_security_group_default_uri: "{{ __azure_security_group_info | community.general.json_query(default) | first }}"
  vars:
    knox: "results[?__azure_network_security_group_name_item=='{{ infra__security_group_knox_name }}'].state.id"
    default: "results[?__azure_network_security_group_name_item=='{{ infra__security_group_default_name }}'].state.id"

- name: Set up Azure Standard Subnets
  azure.azcollection.azure_rm_subnet:
    resource_group: "{{ infra__azure_metagroup_name }}"
    virtual_network_name: "{{ infra__vpc_name }}"
    security_group: "{{ infra__security_group_default_name }}"
    name: "{{ __azure_subnet_item.name }}"
    address_prefix_cidr: "{{ __azure_subnet_item.cidr }}"
    service_endpoints:
      - { service: "Microsoft.Sql" }
      - { service: "Microsoft.Storage" }
    state: present
  ignore_errors: yes  # Not idempotent
  loop_control:
    loop_var: __azure_subnet_item
  loop: "{{ infra__vpc_public_subnets_info | union(infra__vpc_private_subnets_info) }}"

- name: Set fact for Subnet IDs
  ansible.builtin.set_fact:
    infra__azure_subnets: "{{ infra__azure_subnets | default([]) | union([__azure_subnet_item.name | default('')]) }}"
  loop_control:
    loop_var: __azure_subnet_item
  loop: "{{ infra__vpc_public_subnets_info | union(infra__vpc_private_subnets_info) }}"

  # TODO: Check new collection release to see if Delegations are now included
- name: Create Azure NetApp Svcnet if deploying CML
  when:
    - infra__ml_deploy
    - infra__azure_netapp_subnet_uri is undefined or infra__azure_netapp_subnet_uri == ''
  block:
    - name: Create svcnet subnet for CML NetApp Service
      ansible.builtin.command: >
        az network vnet subnet create
        --resource-group "{{ infra__azure_metagroup_name | quote }}"
        --vnet-name "{{ infra__vpc_name | quote }}"
        --name "{{ infra__vpc_svcnet_name | quote }}"
        --address-prefixes "{{ infra__vpc_svcnet_cidr | quote }}"
        --delegations "Microsoft.NetApp/volumes"
    
    - name: Fetch Netapp svcnet uri if exists
      ansible.builtin.command: >
        az network vnet subnet show
        --resource-group "{{ infra__azure_metagroup_name | quote }}"
        --vnet-name "{{ infra__vpc_name | quote }}"
        --name "{{ infra__vpc_svcnet_name |quote }}"
        --query "id" -o tsv
      register: __azure_netapp_subnet_info
    
    - name: Set fact for NetApp Svcnet URI if exists
      ansible.builtin.set_fact:
        infra__azure_netapp_subnet_uri: "{{ __azure_netapp_subnet_info.stdout | default('') }}"
