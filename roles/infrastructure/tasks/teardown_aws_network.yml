---

# Copyright 2021 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Tear down AWS Network
  when: infra__aws_vpc_id | length > 1 and infra__teardown_deletes_network
  block:
    - name: Remove Security Groups
      amazon.aws.ec2_group:
        region: "{{ infra__region }}"
        vpc_id: "{{ infra__aws_vpc_id }}"
        name: "{{ __security_group_name_item }}"
        state: absent
      loop_control:
        loop_var: __security_group_name_item
      loop:
        - "{{ infra__security_group_knox_name }}"
        - "{{ infra__security_group_default_name }}"

    - name: Remove the private networking setup
      when: infra__network_type == 'private'
      block:
        - name: Delete the private route tables
          community.aws.ec2_vpc_route_table:
            vpc_id: "{{ infra__aws_vpc_id }}"
            region: "{{ infra__region }}"
            lookup: tag
            tags: "{{ { 'Name': '-'.join([infra__aws_priv_route_table_name, __aws_private_subnet_id_index | string])} }}"
            state: absent
          loop_control:
            index_var: __aws_private_subnet_id_index
          loop: "{{ infra__vpc_private_subnet_cidrs }}"

        - name: List all managed nat gateways within this VPC
          community.aws.ec2_vpc_nat_gateway_info:
            region: "{{ infra__region }}"
            filters:
              vpc-id: "{{ infra__aws_vpc_id }}"
          register: all_ngws

        - name: Delete nat gateway using discovered nat gateways from facts module.
          community.aws.ec2_vpc_nat_gateway:
            state: absent
            region: "{{ infra__region }}"
            wait: true
            nat_gateway_id: "{{ item.nat_gateway_id }}"
            release_eip: true
          register: delete_nat_gateway_result
          loop: "{{ all_ngws.result }}"

    - name: Remove VPC subnets
      amazon.aws.ec2_vpc_subnet:
        region: "{{ infra__region }}"
        vpc_id: "{{ infra__aws_vpc_id }}"
        cidr: "{{ __aws_subnet_item }}"
        state: absent
      loop_control:
        loop_var: __aws_subnet_item
        index_var: __aws_subnet_index
      loop: "{{ infra__vpc_public_subnet_cidrs | union(infra__vpc_private_subnet_cidrs) }}"

    - name: Remove IGW
      community.aws.ec2_vpc_igw:
        region: "{{ infra__region }}"
        vpc_id: "{{ infra__aws_vpc_id }}"
        state: absent
        tags:
          Name: "{{ infra__aws_igw_name }}"

    - name: Remove VPC, if exists
      amazon.aws.ec2_vpc_net:
        region: "{{ infra__region }}"
        name: "{{ infra__vpc_name }}"
        cidr_block: "{{ infra__vpc_cidr }}"
        state: absent