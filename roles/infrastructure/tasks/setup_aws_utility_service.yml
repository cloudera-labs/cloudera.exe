---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Construct tags for AWS Policy for Storage Utility Bucket
  ansible.builtin.set_fact:
    __infra_aws_policy_tags_list: "{{ __infra_aws_policy_tags_list | default([]) | union([policy_tag_pair]) }}"
  vars:
    policy_tag_pair: "Key={{ __policy_tag.key }},Value={{ __policy_tag.value | quote }}"
  loop: "{{ __infra_aws_policy_tags | dict2items }}"
  loop_control:
    loop_var: __policy_tag

- name: Construct tags for AWS Role for Storage Utility Bucket
  ansible.builtin.set_fact:
    __infra_aws_role_tags_list: "{{ __infra_aws_role_tags_list | default([]) | union([role_tag_pair]) }}"
  vars:
    role_tag_pair: "Key={{ __role_tag.key }},Value={{ __role_tag.value | quote }}"
  loop: "{{ __infra_aws_role_tags | dict2items }}"
  loop_control:
    loop_var: __role_tag

- name: Ensure IAM Policy for Storage Utility Bucket
  community.aws.iam_managed_policy:
    policy_name: "{{ infra__utlity_bucket_name }}"
    policy_description: "Cloudera Storage Utility Service access policy for  {{ infra__utlity_bucket_name }}"
    policy:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Sid: "{{ infra__utlity_bucket_name | replace('-','') }}"
          Action:
            - "s3:ListBucket"
            - "s3:PutObject"
            - "s3:GetBucketLocation"
            - "s3:GetObject"
            - "s3:DeleteObject"
          Resource:
            - "arn:aws:s3:::{{ infra__utlity_bucket_name }}"
            - "arn:aws:s3:::{{ infra__utlity_bucket_name }}/*"
    state: present
  register: __infra_aws_utility_bucket_policy

- name: Update AWS Storage Utility Bucket Policy tags
  when: __infra_aws_policy_tags_list
  ansible.builtin.command: >
    aws iam tag-policy
    --policy-arn {{ __infra_aws_utility_bucket_policy.policy.arn }} 
    --tags {{ __infra_aws_policy_tags_list | join(' ') }}
  register: __infra_aws_utility_bucket_policy_tags
  failed_when: __infra_aws_utility_bucket_policy_tags.rc != 0

- name: Create Role to access Storage Utility Service Bucket
  register: infra__auto_repo_mirror_role
  community.aws.iam_role:
    create_instance_profile: yes
    name: "{{ infra__utlity_bucket_name }}"
    state: present
    managed_policies:
      - "{{ infra__utlity_bucket_name }}"
    assume_role_policy_document:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
          Action: "sts:AssumeRole"

- name: Update AWS Storage Utility Service Bucket Role tags
  when: __infra_aws_role_tags_list
  ansible.builtin.command: >
    aws iam tag-role
    --role-name {{ infra__utlity_bucket_name }} 
    --tags {{ __infra_aws_role_tags_list | join(' ') }}
  register: __infra_aws_storage_utility_role_tags
  failed_when: __infra_aws_storage_utility_role_tags.rc != 0

- name: Wait for Instance Profile to be returned
  register: __infra_utility_iam_role_info
  community.aws.iam_role_info:
    name: "{{ infra__utlity_bucket_name }}"
  retries: 10
  delay: 3
  until:
    - __infra_utility_iam_role_info.iam_roles | length > 0
    - __infra_utility_iam_role_info.iam_roles[0].instance_profiles | length > 0
