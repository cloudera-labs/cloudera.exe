# Copyright 2024 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Python3 and Pip
- name: Install supported version of Python3 if required
  when:
    - not __python3_version is version(__required_python_version, 'ge', version_type='pep440')
  block:
    - name: Ensure required dependencies are installed
      ansible.builtin.package:
        name:
          - build-essential
          - zlib1g-dev
          - libncurses5-dev
          - libgdbm-dev
          - libnss3-dev
          - libssl-dev
          - libreadline-dev
          - libffi-dev
          - curl
          - libsqlite3-dev
          - libbz2-dev
        state: present
        update_cache: true

    - name: Extract Python3 source
      ansible.builtin.unarchive:
        src: https://www.python.org/ftp/python/{{ __required_python_version }}/Python-{{ __required_python_version }}.tgz
        dest: /tmp
        remote_src: true

    - name: Configure Python3 for installation
      ansible.builtin.command: ./configure --enable-optimizations
      args:
        chdir: /tmp/Python-{{ __required_python_version }}
      changed_when: true

    - name: Build Python3 'all' target with extra arguments
      community.general.make:
        chdir: /tmp/Python-{{ __required_python_version }}
        target: altinstall

- name: Ensure pip is installed
  ansible.builtin.package:
    name: python3-pip
    state: present

- name: Ensure pip is upgraded
  ansible.builtin.pip:
    name: pip
    extra_args: --upgrade

# Python2 and Pip
- name: Ensure supported version of Python2
  when:
    - __required_python2_version is defined
  block:
    - name: Install Python2 if required
      when:
        - not (__python2_version is version(__required_python2_version, 'ge', version_type='pep440'))
      block:
        # Install Python2 via system package
        - name: Install Python2 package
          when: python2_package_install
          ansible.builtin.package:
            name: "python{{ __required_python2_version }}"
            state: present

        # Install Python2 via source
        - name: Install Python2 source
          when: not python2_package_install
          block:
            - name: Ensure required dependencies are installed
              ansible.builtin.package:
                name:
                  - build-essential
                  - zlib1g-dev
                  - libncurses5-dev
                  - libgdbm-dev
                  - libnss3-dev
                  - libssl-dev
                  - libreadline-dev
                  - libffi-dev
                  - curl
                  - libsqlite3-dev
                  - libbz2-dev
                state: present
                update_cache: true

            - name: Extract Python2 source
              ansible.builtin.unarchive:
                src: https://www.python.org/ftp/python/{{ __required_python2_version }}/Python-{{ __required_python2_version }}.tgz
                dest: /tmp
                remote_src: true

            - name: Configure Python2 for installation
              ansible.builtin.command: ./configure --enable-optimizations
              args:
                chdir: /tmp/Python-{{ __required_python2_version }}
              changed_when: true

            - name: Build Python2 'all' target with extra arguments
              community.general.make:
                chdir: /tmp/Python-{{ __required_python2_version }}
                target: altinstall
