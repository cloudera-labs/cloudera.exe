# Copyright 2024 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Python3 and Pip
- name: Install supported version of Python3
  when:
    # (
    #   python_version is defined and
    #   python_version |
    #   ansible.builtin.split(".") |
    #   first == "3"
    # ) or (
    prereq_python_supported |
    first |
    ansible.builtin.split(".") |
    first == "3"
    # )
  vars:
    __p3_version: "{{ prereq_python_supported | first | string }}"
  block:
    - name: Install python3
      ansible.builtin.package:
        name: "{{ python3_package | default('python' + __p3_version) }}"
        state: present

    # - name: Download and install
    #   when: python3_package is not defined
    #   ansible.builtin.debug:
    #     msg:
    #       - "TODO - install Python version {{ __required_python_version }}"

    - name: Install pip3
      ansible.builtin.package:
        name: "{{ python3_pip_package | default('python' + __p3_version + '-pip') }}"
        state: present

# Python2 and Pip
- name: Ensure supported version of Python2
  when:
    # (
    #   python_version is defined and
    #   python_version |
    #   ansible.builtin.split(".") |
    #   first == "2"
    # ) or (
    prereq_python_supported |
    first |
    ansible.builtin.split(".") |
    first == "2"
    # )
  vars:
    __p2_version: "{{ prereq_python_supported | first | string }}"
  block:
    # TODO Confirm Python2 package names
    - name: Install python2
      ansible.builtin.package:
        name: "{{ python2_package | default('python' + __p2_version) }}"
        state: present

    # - name: Download and install
    #   when: python2_package is not defined
    #   ansible.builtin.debug:
    #     msg:
    #       - "TODO - install Python version {{ __required_python_version }}"

    - name: Install pip2
      ansible.builtin.package:
        name: "{{ python2_pip_package | default('python' + __p2_version + '-pip') }}"
        state: present
