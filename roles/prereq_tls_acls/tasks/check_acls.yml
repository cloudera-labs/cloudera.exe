---
# Copyright 2024 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Variable 'account' set in outer loop

- name: Check modified TLS ACLs
  when: lookup('vars', item.file, default=False) and item.acl in account
  ansible.builtin.command: "getfacl {{ lookup('vars', item.file) }}"
  loop:
    - file: tls_keystore_path
      acl: keystore_acl
      scope: group
    - file: tls_keystore_path_generic
      acl: keystore_acl
      scope: group
    - file: tls_key_path
      acl: key_acl
      scope: group
    - file: tls_key_path_generic
      acl: key_acl
      scope: group
    - file: tls_key_password_file
      acl: key_password_acl
      scope: user
    - file: tls_key_path_plaintext
      acl: unencrypted_key_acl
      scope: group
    - file: tls_key_path_plaintext_generic
      acl: unencrypted_key_acl
      scope: group
  register: __acl_set
  failed_when: __acl_set.stdout is not search(item.scope + ":" + account.user + ":r--")
  changed_when: false

- name: Check unmodified TLS ACLs
  when: lookup('vars', item.file, default=False) and item.acl not in account
  ansible.builtin.command: "getfacl {{ lookup('vars', item.file) }}"
  loop:
    - file: tls_keystore_path
      acl: keystore_acl
      scope: group
    - file: tls_keystore_path_generic
      acl: keystore_acl
      scope: group
    - file: tls_key_path
      acl: key_acl
      scope: group
    - file: tls_key_path_generic
      acl: key_acl
      scope: group
    - file: tls_key_password_file
      acl: key_password_acl
      scope: user
    - file: tls_key_path_plaintext
      acl: unencrypted_key_acl
      scope: group
    - file: tls_key_path_plaintext_generic
      acl: unencrypted_key_acl
      scope: group
  register: __acl_unset
  failed_when: __acl_unset.stdout is search(item.scope + ":" + account.user + ":r--")
  changed_when: false
