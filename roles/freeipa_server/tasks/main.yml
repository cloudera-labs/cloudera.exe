# Copyright 2024 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# - name: Configure host and DNS networking
#   ansible.builtin.import_role:
#     name: prereq_network_dns
#   vars:
#     network_dns_domain: "{{ ipaserver_domain }}"
#     network_dns_forwarders: "{{ ipaserver_forwarders }}"

- name: Enable local IPv6
  ansible.posix.sysctl:
    name: "{{ __sysctl.key }}"
    value: "{{ __sysctl.value | string }}"
    state: present
    reload: true
  loop: "{{ params | dict2items }}"
  loop_control:
    loop_var: __sysctl
    label: "{{ __sysctl.key }}"
  vars:
    params:
      net.ipv6.conf.all.disable_ipv6: 1
      net.ipv6.conf.default.disable_ipv6: 1
      net.ipv6.conf.lo.disable_ipv6: 0

- name: Install defined FreeIPA server packages
  when: ipaserver_packages is defined
  ansible.builtin.package:
    name: "{{ __ipa_package }}"
    state: present
  loop: "{{ ipaserver_packages }}"
  loop_control:
    loop_var: __ipa_package

- name: Set up the FreeIPA Server
  ansible.builtin.import_role:
    name: freeipa.ansible_freeipa.ipaserver
  vars:
    state: present
    ipaserver_hostname: "{{ inventory_hostname }}"
    # ipaserver_no_host_dns: yes # redundant with ipaserver_setup_dns
    ipaserver_install_packages: "{{ (ipaserver_packages is undefined) | ternary('true', 'false') }}"
    ipaserver_setup_firewalld: false
    ipaserver_setup_dns: true
    ipaserver_auto_reverse: true
    # ipaserver_no_forwarders: no # Only use root servers within FreeIPA
    # TODO Believe this is redundant, as the variable is the same for both DNS and IPA --
    #      ipaserver_auto_forwarders: yes # Use the forwarders from /etc/resolv.conf
    ipaserver_forward_policy: only
    ipaserver_copy_csr_to_controller: true
    ipasssd_enable_dns_updates: true
    # ipaclient_configure_dns_resolver: yes  # Not sure if we want this (and the following two entries)
    # ipaclient_dns_servers: ["{{ ansible_host }}"]
    # ipaclient_cleanup_dns_resolver: yes
    ipaclient_mkhomedir: true

- name: Configure ACL for DNS recursion option
  ansible.builtin.blockinfile:
    path: /etc/named/ipa-ext.conf
    block: "{{ lookup('template', 'recursion_acl.j2') }}"
  notify: Restart DNS

- name: Configure DNS recursion option
  ansible.builtin.lineinfile:
    path: /etc/named/ipa-options-ext.conf
    regex: "^(#)?allow-recursion"
    line: "allow-recursion { internal_network; };"
  notify: Restart DNS

- name: Create DNS zone in provisioned FreeIPA service
  freeipa.ansible_freeipa.ipadnszone:
    zone_name: "{{ ipaserver_domain }}"
    dynamic_update: true
    allow_sync_ptr: true
    forward_policy: none
    ipaadmin_password: "{{ ipaadmin_password }}"

- name: Create reverse DNS zones in provisioned FreeIPA service
  freeipa.ansible_freeipa.ipadnszone:
    name_from_ip: "{{ cidr }}"
    dynamic_update: true
    allow_sync_ptr: true
    ipaadmin_password: "{{ ipaadmin_password }}"
  loop: "{{ ipaserver_cidr }}"
  loop_control:
    loop_var: cidr

- name: Ensure PTR for the FreeIPA server entry
  freeipa.ansible_freeipa.ipadnsrecord:
    name: "{{ inventory_hostname_short }}"
    zone_name: "{{ ipaserver_domain }}."
    record_type: A
    record_value: "{{ ipaclient_ip_address | default(ansible_default_ipv4.address) }}"
    record_ttl: 1200
    create_reverse: true
    ipaadmin_password: "{{ ipaadmin_password }}"
