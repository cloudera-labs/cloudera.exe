---

# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

datahub:
  compute:
    aws:
    azure:
    gcp:
  definitions:
    - name:
      template:
      definition:
      instance_groups:
      extension:
      subnets_filter:
      multi_az:
      tags:
  image_catalog:
    name:
    url:
  instance_group_base:
  storage:
    aws:
    azure:
    gcp:
  suffix:
  tags:
  force_delete:
de:
  definitions:
  suffix:
  tags:
  force_delete:
  vc_suffix:
df:
  readyflows:
    - flow_name:
  customflows:
    - flow_name:
      file:
      description:
      comments:
  suffix:
  min_k8s_nodes:
  max_k8s_nodes:
  public_loadbalancer:
  loadbalancer_ip_ranges:
  k8s_ip_ranges:
  cluster_subnets:
  loadbalancer_subnets:
  teardown:
    persist:
  force_delete:
  terminate_deployments:
  tags:
  deployments:
    - name:
      flow_ver_crn:
      size:
      static_node_count:
      autoscale:
      autoscale_nodes_min:
      autoscale_nodes_max:
      nifi_ver:
      autostart_flow:
      parameter_groups:
        - name:
          parameters:
            - name:
              value:
              assetReferences: [str, ...]
      kpis:
        - metricId:
          componentId:
          alert:
            thresholdMoreThan:
              unitId:
              value:
            thresholdLessThan:
              unitId:
              value:
            frequencyTolerance:
              value:
                unit:
                  id: SECONDS|MINUTES|HOURS|DAYS
dw:
  definitions:
    - name:
      use_default_dbc:
      load_demo_data:
      virtual_warehouses:
        - name:
          type:
          template:
          autoscaling:
            min_nodes:
            max_nodes:
          tags:
          configs:
            common_configs:
            application_configs:
            enable_sso:
            ldap_groups:
  suffix:
  vw:
    suffix:
    type:
    template:
  dbc:
    suffix:
    default_suffix: 
  tags:
  overlay_network:
  private_load_balancer:
  private_worker_nodes:
  force_delete:
env:
  aws:
    arn_partition: aws | aws-cn | aws-us-gov (See https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
    policy:
      name:
        bucket_access:
        cross_account:
        datalake_admin_s3:
        idbroker:
        log:
        ranger_audit_s3:
      suffix:
      tags:
    role:
      label:
        cross_account:
        datalake_admin:
        idbroker:
        log:
        ranger_audit:
      name:
        cross_account:
        datalake_admin:
        idbroker:
        log:
        ranger_audit:
      suffix:
      tags:
    storage:
      suffix:
      tags:
  azure:
    app:
      name:
      suffix:
    policy:
      suffix:
      url:
    role:
      assignment:
        cross_account:
          contributor:
          role:
        datalake_admin:
          data:
            storageowner:
          logs:
            storageowner:
        idbroker:
          mgdidentop:
          vmcontributor:
        log:
          storagecontr:
        ranger_audit:
          storagecontr:
      label:
        data:
        datalake_admin:
        idbroker:
        identity:
        log:
        ranger_audit:
        raz: 
        xaccount:
      name:
        cross_account:
        datalake_admin:
        idbroker:
        log:
        ranger_audit:
        raz: 
      name_suffix:
        admin:
        assignment:
        contributor:
        operator:
        owner:
        user:
      suffix:
    storage:
      path:
        data:
        logs:
      suffix:
    use_custom_role:
    rg_scope:
    single_resource_group:
  cdp:
    admin_group:
      name:
      resource_roles:
      roles:
      suffix:
    control_plane:
      cidr:
      ports:
    credential:
      name:
      name_suffix:
      suffix:
    cross_account:
      account_id:
      external_id:
    group_suffix:
    user_group:
      name:
      resource_roles:
      roles:
      suffix:
  datalake:
    name:
    suffix:
    user_sync:
    version:
    scale:
    enable_raz: 
  gcp:
    auto_enable_services:
    availability_zones:
    manage_identities:
    bindings:
      cross_account:
      logs:
    role:
      label:
        cross_account:
        datalake_admin:
        idbroker:
        identity:
        log:
        ranger_audit:
      name:
        cross_account:
        datalake_admin:
        idbroker:
        identity:
        log:
        ranger_audit:
      suffix:
    storage:
      path:
        data:
        logs:
      suffix:
  name:
  suffix:
  teardown:
    delete_admin_group:
    delete_credential:
    delete_cross_account:
    delete_policies:
    delete_roles:
    delete_user_group:
  # Setting tunnel option to true enables CCM gateway which removes the need for the environment hosts to have a public IP address
  tunnel:
  # Setting public_endpoint_access to true enables public workload endpoint access gateway which lets user access workload from internet
  # default is false. Needing when tunneling is enabled but dont have the direct connectivity with the VPC.
  public_endpoint_access:
  workload_analytics:
globals:
  admin_password:
  artifacts:
    create_deployment_details:
    directory:
  cloudera_license_file:
  cdp_region:
  create_utility_service:
  dynamic_inventory:
    vm:
      count:
      os:
  force_teardown:
  gcloud_credential_file:
  infra_deployment_engine:
  infra_type:
  labels:
    admin:
    app:
    cml:
    cde:
    credential:
    cross_account:
    data:
    datalake:
    datalake_admin:
    default:
    env:
    group:
    idbroker:
    identity:
    internet_gateway:
    knox:
    logs:
    policy:
    private:
    public:
    ranger_audit:
    raz:
    role:
    service_network:
    storage:
    subnet:
    table:
    user:
    vpc:
    vpce:
  name_prefix:
  namespace_cdp:
  region:
  ssh:
    key_path:
    private_key_file:
    public_key_file:
    public_key_id:
    public_key_text:
  storage:
    name:
  tags:
  terraform:
    base_dir:
    remote_state_bucket:
    remote_state_lock_table:
    state_storage:
  utility_bucket_name:
infra:
  aws:
    profile:
    region:
    vpc:
      az_count:
      internet_gateway:
        name:
        suffix:
      labels:
        public_route_table:
        private_route_table:
        public_route_table_suffix:
        private_route_table_suffix:
      existing:
        vpc_id:
        public_subnet_ids:
        private_subnet_ids:
    role:
      tags:
    policy:
      tags:
    storage:
      tags:
      bucket_object_ownership: 
      bucket_acl_permissions: 
    private_endpoints:
  azure:
    metagroup:
      name:
      suffix:
    netapp:
      account:
        name:
        suffix:
      pool:
        name:
        size:
        suffix:
        type:
      suffix:
      volume:
        name:
        size:
        suffix:
        type:
    region:
    sp_login_from_env:
    storage:
      class:
      name:
      type:
  dynamic_inventory:
    storage:
      delete:
      size:
      type:
    tag:
    tag_key:
    tag_value:
    vm:
      suffix:
      type:
  gcp:
    project:
    region:
    storage:
      path:
        data:
        logs:
  security_group:
    default:
      name:
      suffix:
    knox:
      name:
      suffix:
    vpce:
      name:
      suffix:
  storage:
    name:
    path:
      data:
      de:
      logs:
      ml:
      ranger_audit:
  teardown:
    delete_data:
    delete_mirror:
    delete_network:
    delete_ssh_key:
  vpc:
    cidr:
    extra_cidr:
    extra_ports:
    name:
    private_subnets:
    private_subnets_suffix:
    public_subnets:
    public_subnets_suffix:
    service_network:
      name:
      subnet:
    user_cidr:
    user_ports:
    tunneled_cidr:
ml:
  definitions:
  k8s_request_base:
  suffix:
  tags:
  public_loadbalancer:
  force_delete:
opdb:
  definitions:
  suffix:
data:
  storage:
    # A list of lists of locations (read/[only|write]) defined in a policy and assigned to a role
    - read_only: bool
      locations: []
      policy:
        name:
        suffix:
        delete: bool
      role:
        datalake_admin: bool
        name:
        suffix:
        delete: bool
  policy:
    suffix:
    aws:
      suffix:
      read_only:
        suffix:
        url:
      read_write:
        suffix:
        url:
  role:
    suffix:
    aws:
      suffix:
  teardown:
      delete_policies:
      delete_roles: 
