# Copyright 2025 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
DOCUMENTATION:
  name: version
  author: Cloudera Labs
  short_description: Parse a Cloudera Manager version string
  description:
    - Cloudera Manager version string parsing.
    - Returns a dictionary of the version parts.
    - Cloudera versioning is an extension of Semantic Versioning that uses the C(prerelease) segment to indicate service packs or extended patch releases.
    - Moreover, this versioning scheme allow the C(prerelease) delimiter to use whitespace (C(' ')) and dots  (C('.')) in addition to the semantic version's
      dash (C('-')).
  version_added: "3.0.0"
  positional: _input
  options:
    _input:
      description: A version string to parse.
      type: dict
      required: true

EXAMPLES: |
  - name: Parse a standard version string
    ansible.builtin.set_fact:
      standard: "{{ '1.2.3' | cloudera.exe.version }}"

  - name: Parse a version plus build number
    ansible.builtin.set_fact:
      build: "{{ '1.2.3.4' | cloudera.exe.version }}"

  - name: Parse a version plus service pack (as prerelease)
    ansible.builtin.set_fact:
      service_pack: "{{ '1.2.3 SP2' | cloudera.exe.version }}"

  - name: Parse a version plus build metadata string
    ansible.builtin.set_fact:
      build: "{{ '1.2.3+build7' | clouder.exe.version }}"

  - name: Parse a version plus prerelease and build string
    ansible.builtin.set_fact:
      full: "{{ '1.2.3-rc1+build7' | cloudera.exe.version }}"

RETURN:
  _value:
    description:
      - A dictionary of the version parts.
      - If unable to parse the string, returns C(None).
    type: dict
    options:
      major:
        description: Major version
      minor:
        description: Minor version
      patch:
        description: Patch version
      prerelease:
        description: Prerelease/Service pack version
        returned: when supported
      buildmetadata:
        description: Build metadata version
        returned: when supported
